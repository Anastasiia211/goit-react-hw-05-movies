{"version":3,"file":"static/js/550.a81a9af0.chunk.js","mappings":"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","sources":["api.js","components/InfoAdd/InfoAdd.styled.js","components/InfoAdd/InfoAdd.js","components/LinkBack/LinkBack.styled.js","components/LinkBack/LinkBack.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTY1NDU5YjQyMDIyZWIxNmY1Y2ZhZThmYmEwNTZjNSIsInN1YiI6IjY1NTUzZGE5NjdiNjEzNDVjZjA1MWZlMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._8RTzmcO78xExbWd32QNw6iyXkN3hqQndvomjFUjc2k'\n  },\n};\n\n\nexport const fetchMovies = async () => {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        time_window: 'week',\n    });\n    const response = await axios.get(`/trending/movie/week?${params}`, options);\n    return response.data;\n};\n\nexport const searchMovies = async query => {\n  const params = new URLSearchParams({\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n    query: query,\n  });\n  const response = await axios.get(`/search/movie?${params}`, options);\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n  });\n  const response = await axios.get(`/movie/${movieId}?${params}`, options);\n  return response.data;\n};\n\nexport const fetchCredits = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n  });\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${params}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n    page: 1,\n  });\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${params}`,\n    options\n  );\n  return response.data;\n};","import styled from 'styled-components';\n\nexport const Extras = styled.div`\nbox-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n background-color: ${p => p.theme.colors.greens};\n padding:15px;\n\n   ul {\n    display: flex;\n    gap: 20px;\n  }\n`;","import { Link } from \"react-router-dom\";\nimport { Extras } from './InfoAdd.styled';\n\n\nexport const InfoAdd = ({ data }) => {\n    return (\n        <Extras>\n            <h3>\n                Additional information\n            </h3>\n            <ul>\n                <li>\n                    <Link to={`/movies/${data.id}/cast`}>Cast</Link>\n                </li>\n                <li>\n                    <Link to={`/movies/${data.id}/reviews`}>Reviews</Link>\n                </li>\n            </ul>\n        </Extras>\n    );\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\ndisplay:flex;\nalign-items: center;\ngap:10px;\n`;","import { TiArrowBackOutline } from \"react-icons/ti\";\nimport { BackLink } from './LinkBack.styled';\n\n\nexport const LinkBack = ({ to = '/', children }) => {\n    return (\n        <BackLink to={to}>\n            <TiArrowBackOutline />\n            {children}\n            </BackLink>\n    );\n};","import styled from 'styled-components';\n\nexport const Card = styled.div`\nbackground-color: ${p => p.theme.colors.white};\nbox-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\nmargin-top:40px;\n display: flex;\ngap: 40px;\n\n  .info-title{\n   margin-bottom:5px;\n  }\n\n  .info-card{\n    padding: 30px 0;\n  }\n  `;\n","import { nanoid } from 'nanoid';\nimport { Card } from './MovieCard.styled';\n\n\nexport const MovieCard = ({ data }) => {\n    const imgDefault =\n        'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    const year = data.release_date.split('-');\n  \n    return (\n        <Card>\n            <img\n                src={\n                    data.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n                        : imgDefault\n                }\n                alt={data.title}\n                width={350}\n            />\n            <div className=\"info-card\">\n                <h1>\n                    {data.title} ({year[0]})\n                </h1>\n                <p>\n                    <i>{data.tagline}</i>\n                </p>\n                <p>{data.overview}</p>\n                <div>\n                    <p className=\"info-title\">\n                        <strong>Genres:</strong>\n                    </p>\n                    <ul>\n                        {data.genres.map(item => (\n                            <li key={nanoid()}>\n                                <p>{item.name}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div>\n                    <p className=\"info-title\">\n                        <strong>Languages:</strong>\n                    </p>\n                    <ul>\n                        {data.spoken_languages.map(item => (\n                            <li key={nanoid()}>\n                                <p>{item.english_name}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div>\n                    <p className=\"info-title\">\n                        <strong>Production countries:</strong>\n                    </p>\n                    <ul>\n                        {data.production_countries.map(item => (\n                            <li key={nanoid()}>\n                                <p>{item.name}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </Card>\n    );\n};","import { useEffect, useState, useRef } from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { InfoAdd } from '../components/InfoAdd/InfoAdd';\nimport { LinkBack } from '../components/LinkBack/LinkBack';\nimport { MovieCard } from '../components/MovieCard/MovieCard';\nimport { fetchMovieById } from 'api';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const params = useParams();\n  const [movie, setMovie] = useState();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n\n  useEffect(() => {\n    if (!params.movieId) return;\n    async function getMovie() {\n      try {\n        const fetchedMovie = await fetchMovieById(params.movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {}\n    }\n\n    getMovie();\n  }, [params.movieId]);\n\n  return (\n    <>\n      <LinkBack to={backLinkLocationRef.current}>Back</LinkBack>\n      {movie && (\n        <>\n          <MovieCard data={movie} />\n          <InfoAdd data={movie} />\n        </>\n      )}\n\n      <Outlet />\n    </>\n  );\n}"],"names":["axios","options","method","headers","accept","Authorization","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","response","_context","prev","next","URLSearchParams","language","time_window","concat","sent","abrupt","data","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","include_adult","page","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","movie_id","_x2","fetchCredits","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Extras","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","greens","InfoAdd","_jsxs","children","_jsx","Link","to","id","BackLink","LinkBack","_ref$to","TiArrowBackOutline","Card","white","MovieCard","year","release_date","split","src","poster_path","alt","title","width","className","tagline","overview","genres","map","item","name","nanoid","spoken_languages","english_name","production_countries","MovieDetails","_location$state$from","_location$state","location","useLocation","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","backLinkLocationRef","useRef","state","from","useEffect","_getMovie","fetchedMovie","t0","getMovie","_Fragment","current","Outlet"],"sourceRoot":""}