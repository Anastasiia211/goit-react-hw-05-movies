{"version":3,"file":"static/js/835.1e83c445.chunk.js","mappings":"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","sources":["api.js","components/MovieCredits/MovieCredits.styled.js","components/MovieCredits/MovieCredits.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTY1NDU5YjQyMDIyZWIxNmY1Y2ZhZThmYmEwNTZjNSIsInN1YiI6IjY1NTUzZGE5NjdiNjEzNDVjZjA1MWZlMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._8RTzmcO78xExbWd32QNw6iyXkN3hqQndvomjFUjc2k'\n  },\n};\n\n\nexport const fetchMovies = async () => {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        time_window: 'week',\n    });\n    const response = await axios.get(`/trending/movie/week?${params}`, options);\n    return response.data;\n};\n\nexport const searchMovies = async query => {\n  const params = new URLSearchParams({\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n    query: query,\n  });\n  const response = await axios.get(`/search/movie?${params}`, options);\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n  });\n  const response = await axios.get(`/movie/${movieId}?${params}`, options);\n  return response.data;\n};\n\nexport const fetchCredits = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n  });\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${params}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n    page: 1,\n  });\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${params}`,\n    options\n  );\n  return response.data;\n};","import styled from 'styled-components';\n\nexport const Error = styled.ul``;\n\nexport const CreditsCard = styled.ul``;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RotatingSquare } from 'react-loader-spinner';\nimport { fetchCredits } from 'api';\nimport { CreditsCard, Error } from './MovieCredits.styled';\n\nconst MovieCredits = () => {\n      const [loading, setLoading] = useState(false);\n  const params = useParams();\n  const [credits, setCredits] = useState([]);\n  const imgDefault =\n        'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    \n    useEffect(() => {\n        if (!params.movieId) return;\n        async function getCredits() {\n            try {\n                setLoading(true);\n                const fetchedCredits = await fetchCredits(params.movieId);\n                setCredits(fetchedCredits.cast);\n            } catch (error) {\n            } finally {\n                setLoading(false);\n            }\n        }\n            getCredits();\n    }, [params.movieId]);\n    \n    return (\n        <>\n            {loading && (\n                <RotatingSquare\n                    height=\"100\"\n                    width=\"100\"\n                    color=\"#4fa94d\"\n                    ariaLabel=\"rotating-square-loading\"\n                    strokeWidth=\"4\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"\"\n                    visible={true}\n                />\n            )}\n             {credits.length > 0 ? (\n        <CreditsCard>\n          {credits.map(item => (\n            <li key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                    : imgDefault\n                }\n                alt={item.name}\n                width={213}\n              />\n\n              <p>{item.name}</p>\n              <p>\n                <i>{item.character}</i>\n              </p>\n            </li>\n          ))}\n        </CreditsCard>\n      ) : (\n        <Error>\n          <p>Cast not available</p>\n        </Error>\n      )}\n    </>\n  );\n};\n\nexport default MovieCredits;\n"],"names":["axios","options","method","headers","accept","Authorization","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","response","_context","prev","next","URLSearchParams","language","time_window","concat","sent","abrupt","data","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","include_adult","page","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","movie_id","_x2","fetchCredits","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Error","styled","_templateObject","_taggedTemplateLiteral","CreditsCard","_templateObject2","_useState","useState","_useState2","_slicedToArray","loading","setLoading","useParams","_useState3","_useState4","credits","setCredits","useEffect","_getCredits","fetchedCredits","cast","t0","finish","getCredits","_jsxs","_Fragment","children","_jsx","RotatingSquare","height","width","color","ariaLabel","strokeWidth","wrapperStyle","wrapperClass","visible","length","map","item","src","profile_path","alt","name","character","id"],"sourceRoot":""}