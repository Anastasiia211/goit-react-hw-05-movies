{"version":3,"file":"static/js/843.851a18fd.chunk.js","mappings":"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","sources":["api.js","components/MovieItem/MovieItem.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTY1NDU5YjQyMDIyZWIxNmY1Y2ZhZThmYmEwNTZjNSIsInN1YiI6IjY1NTUzZGE5NjdiNjEzNDVjZjA1MWZlMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._8RTzmcO78xExbWd32QNw6iyXkN3hqQndvomjFUjc2k'\n  },\n};\n\n\nexport const fetchMovies = async () => {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        time_window: 'week',\n    });\n    const response = await axios.get(`/trending/movie/week?${params}`, options);\n    return response.data;\n};\n\nexport const searchMovies = async query => {\n  const params = new URLSearchParams({\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n    query: query,\n  });\n  const response = await axios.get(`/search/movie?${params}`, options);\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n  });\n  const response = await axios.get(`/movie/${movieId}?${params}`, options);\n  return response.data;\n};\n\nexport const fetchCredits = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n  });\n  const response = await axios.get(\n    `/movie/${movieId}/credits?${params}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    movie_id: movieId,\n    page: 1,\n  });\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?${params}`,\n    options\n  );\n  return response.data;\n};","import { Link, useLocation } from \"react-router-dom\";\n\n\nexport const MovieItem = ({ movie }) => {\n    const location = useLocation;\n    const imgDefault =\n        'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    const year = movie.release.data.split('-');\n\n    return (\n        <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n                width={320}\n                src={\n                    movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : imgDefault\n                }\n                alt={movie.title}\n            />\n            <div className=\"\">\n                <h3>\n                    {movie.title} ({year[0]})\n                </h3>\n            </div>\n        </Link>\n    );\n};","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li``;","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List, Item } from './MovieList.styled';\n\nexport const MovieList = ({ items }) => {\n  return (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <MovieItem movie={item} />\n        </Item>\n      ))}\n    </List>\n  );\n};","import styled from 'styled-components';\nimport { ErrorMessage } from 'formik';\n\nexport const ErrMessage = styled(ErrorMessage)``;\n\nexport const SearchForm = styled.div``;","import { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { SearchForm, ErrMessage } from './SearchMovie.styled';\n\n\nconst SignupSchema = Yup.object().shape({\n  search: Yup.string().required('This field is empty. Write something'),\n});\n\nexport const SearchMovie = ({ onSubmit, handleChange }) => {\n  return (\n    <SearchForm>\n      <Formik\n        initialValues={{\n          search: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={values => {\n          onSubmit(values);\n        }}\n        onChange={values => {\n          handleChange(values);\n        }}\n      >\n        <Form>\n          <div className=\"search-item\">\n            <label htmlFor=\"search\" className=\"visually-hidden\"></label>\n            <Field\n              id=\"search\"\n              name=\"search\"\n              autoComplete=\"off\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search movie\"\n              //value={title}\n              //onChange={handleChange}\n            />\n            <ErrMessage name=\"search\" component=\"div\" />\n            <button type=\"submit\" className=\"button\">\n              Search\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </SearchForm>\n  );\n};\n\n","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from '../components/MovieList/MovieList';\nimport { SearchMovie } from '../components/SearchMovie/SearchMovie';\nimport { searchMovies } from 'api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { RotatingSquare } from 'react-loader-spinner';\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [, setQuery] = useState('');\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const title = searchParams.get('title');\n\n    useEffect(() => {\n        if (!title || title === '') {\n            return;\n        }\n        async function getMovies() {\n            try {\n                setLoading(true);\n                setError(false);\n                const allMovies = await searchMovies(title);\n                setMovies(allMovies.results);\n                if (allMovies.results < 1) {\n                    toast.error('There are no entries. Try again');\n                }\n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        getMovies();\n    }, [title]);\n\n    const handlerSubmit = evt => {\n        if (title !== evt.search.trim()) {\n            setMovies([]);\n        }\n        setQuery(evt.search.trim());\n        setSearchParams({ title: evt.search.trim() });\n    };\n\n    const handlerChange = evt => {\n        setSearchParams({ title: evt.target.value.trim() });\n    };\n\n    return (\n        <>\n            <h1>All movies</h1>\n            <SearchMovie onSubmit={handlerSubmit} handleChange={handlerChange} />\n            {loading && (\n                <RotatingSquare\n                    height=\"100\"\n                    width=\"100\"\n                    color=\"#4fa94d\"\n                    ariaLabel=\"rotating-square-loading\"\n                    strokeWidth=\"4\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"\"\n                    visible={true}\n                />\n            )}\n            {error && <p>Error! Please reload this page!</p>}\n            {movies.length > 0 && <MovieList items={movies} />}\n            <Toaster position=\"top-right\" />\n        </>\n    );\n    }"],"names":["axios","options","method","headers","accept","Authorization","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","response","_context","prev","next","URLSearchParams","language","time_window","concat","sent","abrupt","data","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","include_adult","page","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","movie_id","_x2","fetchCredits","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","MovieItem","movie","location","useLocation","year","release","split","_jsxs","Link","to","id","state","from","children","_jsx","width","src","poster_path","alt","title","className","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieList","items","map","item","ErrMessage","ErrorMessage","SearchForm","SignupSchema","Yup","shape","search","required","SearchMovie","onSubmit","handleChange","Formik","initialValues","validationSchema","values","onChange","Form","htmlFor","Field","name","autoComplete","type","placeholder","component","MoviesPage","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","_getMovies","allMovies","results","toast","t0","finish","getMovies","_Fragment","evt","trim","target","value","RotatingSquare","height","color","ariaLabel","strokeWidth","wrapperStyle","wrapperClass","visible","length","Toaster","position"],"sourceRoot":""}